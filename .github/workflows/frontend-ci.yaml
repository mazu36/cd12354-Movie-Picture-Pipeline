# Workflow name
name: Frontend Continuous Integration

env:
  #REACT_APP_MOVIE_API_URL: http://localhost:5000
  REACT_APP_MOVIE_API_HOST: ${{ vars.REACT_APP_MOVIE_API_HOST}} 
  REACT_APP_MOVIE_API_URL: ${{ format('http://${0}:5000', env.REACT_APP_MOVIE_API_HOST) }}

  REACT_APP_MOVIE_API_URL2: ${{ format('http://${0}:5000', vars.REACT_APP_MOVIE_API_HOST) }}
  #REACT_APP_MOVIE_API_URL: ${{ format('env.{0}', inputs.choice) }}
      

# Triggers for the workflow
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:
      
  # Automatic trigger on pull request events targeting the main branch and frontend changed
  pull_request:
    branches: 
      - main
    paths:
      - 'starter/frontend/**'

# Jobs defined in the workflow
jobs:
  frontend_lint:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: true

    steps:
      - name: Check out the code from the repository.
        uses: actions/checkout@v4

      - name: Copy package-lock.json files
        run: cp starter/frontend/package-lock.json .

      - name: Set up a Node.js environment using the specified node version.
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: 'npm'

      - name: Install the dependencies.
        #run: cd starter/frontend && npm ci
        run: cd starter/frontend && npm install

      - name: Run the linter.
        run: cd starter/frontend && npm run lint

  frontend_test:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: true

    steps:
      - name: Check out the code from the repository.
        uses: actions/checkout@v4

      - name: Copy package-lock.json files
        run: cp starter/frontend/package-lock.json .

      - name: Set up a Node.js environment using the specified node version.
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: 'npm'

      - name: Install the dependencies.
        #run: cd starter/frontend && npm ci
        run: cd starter/frontend && npm install

      - name: Run the tests.
        run: cd starter/frontend && CI=true npm test


  frontend_build:
    needs: [frontend_lint, frontend_test]
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true

    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v4

      - name: Copy package-lock.json files
        run: cp starter/frontend/package-lock.json .

      - name: Set up a Node.js environment using the specified node version.
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: 'npm'

      - name: Install the dependencies.
        #run: cd starter/frontend && npm ci
        run: cd starter/frontend && npm install

      - name: Run the tests.
        run: cd starter/frontend && CI=true npm test

      # Build image.
      - run: cd starter/frontend && docker build --build-arg=REACT_APP_MOVIE_API_URL=${{env.REACT_APP_MOVIE_API_URL}} --tag=mp-frontend:latest .
