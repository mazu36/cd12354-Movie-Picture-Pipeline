# Workflow name
name: Movie Picture frontend

env:
  REACT_APP_MOVIE_API_URL: http://localhost:5000  

# Triggers for the workflow
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:
      
  # Automatic trigger on pull request events targeting the main branch
  pull_request:
    branches: [main]
    types: [edited]

# Jobs defined in the workflow
jobs:
  frontend_lint:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: true

    steps:
      - name: Check out the code from the repository.
        uses: actions/checkout@v4

      #- name: Copy dependency files
      # run: cp starter/frontend/package*.json ./
      - name: Go to an application folder
        run: cd starter/frontend 

      - name: Set up a Node.js environment using the specified node version.
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install the dependencies.
        #run: cd starter/frontend && npm ci
        run: npm ci

      - name: Run the linter.
        run: npm run lint

      - name: Send a console message at completion.
        run: |
          echo "Hello ${{github.actor}}. Frontend lint passed."

  frontend_test:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: true

    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v4
      # Set up a Node.js environment using the specified node version.
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Go to an application folder
        run: cd starter/frontend 

      # Install the dependencies.
      - run: npm ci

      # Run the tests.
      - run: CI=true npm test

      # Send a console message at completion.
      - run: |
          echo "Hello ${{github.actor}}. Frontend tests passed."

  frontend_build:
    needs: [frontend_lint, frontend_lint]
    runs-on: ubuntu-latest
    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v4

      # Build image.
      - run: cd starter/frontend && docker build --build-arg=REACT_APP_MOVIE_API_URL=${{env.REACT_APP_MOVIE_API_URL}} --tag=mp-frontend:latest .

      # Send a console message at completion.
      - run: |
          echo "Hello ${{github.actor}}. Frontend build done."